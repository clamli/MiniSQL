// Generated from D:/IDEA programming/MiniSQL/src/main/resources\MiniSQL.g4 by ANTLR 4.7
package antlr.gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniSQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		CREATE=1, DATABASE=2, DROP=3, IF=4, EXISTS=5, SCHEMA=6, FROM=7, WHERE=8, 
		ASC=9, DESC=10, INTO=11, DEFAULT=12, TABLE=13, PRIMARY_SYM=14, KEY_SYM=15, 
		ON=16, UNIQUE_SYM=17, INDEX_SYM=18, SELECT_SYM=19, DELETE_SYM=20, INSERT_SYM=21, 
		UPDATE_SYM=22, ORDER_SYM=23, BY_SYM=24, SET_SYM=25, VALUE_SYM=26, VALUES=27, 
		NULL_SYM=28, INT_SYM=29, CHAR=30, INTEGER_SYM=31, FLOAT_SYM=32, DIVIDE=33, 
		MOD_SYM=34, OR_SYM=35, AND_SYM=36, NOT_SYM=37, XOR_SYM=38, UNION_SYM=39, 
		ARROW=40, EQ_SYM=41, NOT_EQ=42, LET=43, LTH=44, GET=45, GTH=46, SET_VAR=47, 
		ALL_FIELDS=48, SEMI=49, COLON=50, DOT=51, COMMA=52, ASTERISK=53, RPAREN=54, 
		LPAREN=55, RBRACK=56, LBRACK=57, PLUS=58, MINUS=59, NEGATION=60, BITWISE=61, 
		BITAND=62, POWER_OP=63, INTEGER_NUM=64, REAL_NUM=65, TEXT_STRING=66, ID=67, 
		WHITE_SPACE=68, SL_COMMENT=69, ML_COMMENT=70;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"A_", "B_", "C_", "D_", "E_", "F_", "G_", "H_", "I_", "J_", "K_", "L_", 
		"M_", "N_", "O_", "P_", "Q_", "R_", "S_", "T_", "U_", "V_", "W_", "X_", 
		"Y_", "Z_", "CREATE", "DATABASE", "DROP", "IF", "EXISTS", "SCHEMA", "FROM", 
		"WHERE", "ASC", "DESC", "INTO", "DEFAULT", "TABLE", "PRIMARY_SYM", "KEY_SYM", 
		"ON", "UNIQUE_SYM", "INDEX_SYM", "SELECT_SYM", "DELETE_SYM", "INSERT_SYM", 
		"UPDATE_SYM", "ORDER_SYM", "BY_SYM", "SET_SYM", "VALUE_SYM", "VALUES", 
		"NULL_SYM", "INT_SYM", "CHAR", "INTEGER_SYM", "FLOAT_SYM", "DIVIDE", "MOD_SYM", 
		"OR_SYM", "AND_SYM", "NOT_SYM", "XOR_SYM", "UNION_SYM", "ARROW", "EQ_SYM", 
		"NOT_EQ", "LET", "LTH", "GET", "GTH", "SET_VAR", "ALL_FIELDS", "SEMI", 
		"COLON", "DOT", "COMMA", "ASTERISK", "RPAREN", "LPAREN", "RBRACK", "LBRACK", 
		"PLUS", "MINUS", "NEGATION", "BITWISE", "BITAND", "POWER_OP", "INTEGER_NUM", 
		"REAL_NUM", "TEXT_STRING", "ID", "WHITE_SPACE", "SL_COMMENT", "ML_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "'=>'", null, null, "'<='", "'<'", "'>='", "'>'", 
		"'='", "'.*'", "';'", "':'", "'.'", "','", "'*'", "')'", "'('", "']'", 
		"'['", "'+'", "'-'", "'~'", "'|'", "'&'", "'^'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "CREATE", "DATABASE", "DROP", "IF", "EXISTS", "SCHEMA", "FROM", 
		"WHERE", "ASC", "DESC", "INTO", "DEFAULT", "TABLE", "PRIMARY_SYM", "KEY_SYM", 
		"ON", "UNIQUE_SYM", "INDEX_SYM", "SELECT_SYM", "DELETE_SYM", "INSERT_SYM", 
		"UPDATE_SYM", "ORDER_SYM", "BY_SYM", "SET_SYM", "VALUE_SYM", "VALUES", 
		"NULL_SYM", "INT_SYM", "CHAR", "INTEGER_SYM", "FLOAT_SYM", "DIVIDE", "MOD_SYM", 
		"OR_SYM", "AND_SYM", "NOT_SYM", "XOR_SYM", "UNION_SYM", "ARROW", "EQ_SYM", 
		"NOT_EQ", "LET", "LTH", "GET", "GTH", "SET_VAR", "ALL_FIELDS", "SEMI", 
		"COLON", "DOT", "COMMA", "ASTERISK", "RPAREN", "LPAREN", "RBRACK", "LBRACK", 
		"PLUS", "MINUS", "NEGATION", "BITWISE", "BITAND", "POWER_OP", "INTEGER_NUM", 
		"REAL_NUM", "TEXT_STRING", "ID", "WHITE_SPACE", "SL_COMMENT", "ML_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MiniSQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniSQL.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2H\u0284\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3"+
		"\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3"+
		"\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3"+
		"\36\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3"+
		"\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3"+
		"&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)"+
		"\3)\3)\3*\3*\3*\3*\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3."+
		"\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60"+
		"\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62"+
		"\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38\38\38\3"+
		"9\39\39\39\39\3:\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3"+
		"<\5<\u01b8\n<\3=\3=\3=\3=\3=\5=\u01bf\n=\3>\3>\3>\3>\3>\5>\u01c6\n>\3"+
		"?\3?\3?\3?\3?\3?\5?\u01ce\n?\3@\3@\3@\3@\3@\5@\u01d5\n@\3A\3A\3A\3A\3"+
		"B\3B\3B\3B\3B\3B\3C\3C\3C\3D\3D\3D\3D\3D\5D\u01e9\nD\3E\3E\3E\3E\3E\3"+
		"E\3E\3E\5E\u01f3\nE\3F\3F\3F\3G\3G\3H\3H\3H\3I\3I\3J\3J\3K\3K\3K\3L\3"+
		"L\3M\3M\3N\3N\3O\3O\3P\3P\3Q\3Q\3R\3R\3S\3S\3T\3T\3U\3U\3V\3V\3W\3W\3"+
		"X\3X\3Y\3Y\3Z\3Z\3[\6[\u0223\n[\r[\16[\u0224\3\\\3\\\3\\\3\\\3\\\3\\\3"+
		"\\\3\\\3\\\3\\\3\\\5\\\u0232\n\\\3\\\3\\\3\\\5\\\u0237\n\\\3\\\5\\\u023a"+
		"\n\\\3]\3]\3]\3]\3]\3]\3]\3]\7]\u0244\n]\f]\16]\u0247\13]\3]\3]\3]\3]"+
		"\3]\3]\3]\3]\3]\7]\u0252\n]\f]\16]\u0255\13]\3]\5]\u0258\n]\3^\3^\7^\u025c"+
		"\n^\f^\16^\u025f\13^\3_\3_\3_\3_\3`\3`\3`\5`\u0268\n`\3`\7`\u026b\n`\f"+
		"`\16`\u026e\13`\3`\5`\u0271\n`\3`\3`\3`\3`\3a\3a\3a\3a\7a\u027b\na\fa"+
		"\16a\u027e\13a\3a\3a\3a\3a\3a\3\u027c\2b\3\2\5\2\7\2\t\2\13\2\r\2\17\2"+
		"\21\2\23\2\25\2\27\2\31\2\33\2\35\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2"+
		"\63\2\65\2\67\39\4;\5=\6?\7A\bC\tE\nG\13I\fK\rM\16O\17Q\20S\21U\22W\23"+
		"Y\24[\25]\26_\27a\30c\31e\32g\33i\34k\35m\36o\37q s!u\"w#y${%}&\177\'"+
		"\u0081(\u0083)\u0085*\u0087+\u0089,\u008b-\u008d.\u008f/\u0091\60\u0093"+
		"\61\u0095\62\u0097\63\u0099\64\u009b\65\u009d\66\u009f\67\u00a18\u00a3"+
		"9\u00a5:\u00a7;\u00a9<\u00ab=\u00ad>\u00af?\u00b1@\u00b3A\u00b5B\u00b7"+
		"C\u00b9D\u00bbE\u00bdF\u00bfG\u00c1H\3\2\"\4\2CCcc\4\2DDdd\4\2EEee\4\2"+
		"FFff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4"+
		"\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWw"+
		"w\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\3\2))\3\2$$\6\2&&C\\aac|\7"+
		"\2&&\62;C\\aac|\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u0287\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2"+
		"\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k"+
		"\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2"+
		"\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2"+
		"\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b"+
		"\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2"+
		"\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d"+
		"\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2"+
		"\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af"+
		"\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2\2\2\u00b7\3\2\2"+
		"\2\2\u00b9\3\2\2\2\2\u00bb\3\2\2\2\2\u00bd\3\2\2\2\2\u00bf\3\2\2\2\2\u00c1"+
		"\3\2\2\2\3\u00c3\3\2\2\2\5\u00c5\3\2\2\2\7\u00c7\3\2\2\2\t\u00c9\3\2\2"+
		"\2\13\u00cb\3\2\2\2\r\u00cd\3\2\2\2\17\u00cf\3\2\2\2\21\u00d1\3\2\2\2"+
		"\23\u00d3\3\2\2\2\25\u00d5\3\2\2\2\27\u00d7\3\2\2\2\31\u00d9\3\2\2\2\33"+
		"\u00db\3\2\2\2\35\u00dd\3\2\2\2\37\u00df\3\2\2\2!\u00e1\3\2\2\2#\u00e3"+
		"\3\2\2\2%\u00e5\3\2\2\2\'\u00e7\3\2\2\2)\u00e9\3\2\2\2+\u00eb\3\2\2\2"+
		"-\u00ed\3\2\2\2/\u00ef\3\2\2\2\61\u00f1\3\2\2\2\63\u00f3\3\2\2\2\65\u00f5"+
		"\3\2\2\2\67\u00f7\3\2\2\29\u00fe\3\2\2\2;\u0107\3\2\2\2=\u010c\3\2\2\2"+
		"?\u010f\3\2\2\2A\u0116\3\2\2\2C\u011d\3\2\2\2E\u0122\3\2\2\2G\u0128\3"+
		"\2\2\2I\u012c\3\2\2\2K\u0131\3\2\2\2M\u0136\3\2\2\2O\u013e\3\2\2\2Q\u0144"+
		"\3\2\2\2S\u014c\3\2\2\2U\u0150\3\2\2\2W\u0153\3\2\2\2Y\u015a\3\2\2\2["+
		"\u0160\3\2\2\2]\u0167\3\2\2\2_\u016e\3\2\2\2a\u0175\3\2\2\2c\u017c\3\2"+
		"\2\2e\u0182\3\2\2\2g\u0185\3\2\2\2i\u0189\3\2\2\2k\u018f\3\2\2\2m\u0196"+
		"\3\2\2\2o\u019b\3\2\2\2q\u019f\3\2\2\2s\u01a4\3\2\2\2u\u01ac\3\2\2\2w"+
		"\u01b7\3\2\2\2y\u01be\3\2\2\2{\u01c5\3\2\2\2}\u01cd\3\2\2\2\177\u01d4"+
		"\3\2\2\2\u0081\u01d6\3\2\2\2\u0083\u01da\3\2\2\2\u0085\u01e0\3\2\2\2\u0087"+
		"\u01e8\3\2\2\2\u0089\u01f2\3\2\2\2\u008b\u01f4\3\2\2\2\u008d\u01f7\3\2"+
		"\2\2\u008f\u01f9\3\2\2\2\u0091\u01fc\3\2\2\2\u0093\u01fe\3\2\2\2\u0095"+
		"\u0200\3\2\2\2\u0097\u0203\3\2\2\2\u0099\u0205\3\2\2\2\u009b\u0207\3\2"+
		"\2\2\u009d\u0209\3\2\2\2\u009f\u020b\3\2\2\2\u00a1\u020d\3\2\2\2\u00a3"+
		"\u020f\3\2\2\2\u00a5\u0211\3\2\2\2\u00a7\u0213\3\2\2\2\u00a9\u0215\3\2"+
		"\2\2\u00ab\u0217\3\2\2\2\u00ad\u0219\3\2\2\2\u00af\u021b\3\2\2\2\u00b1"+
		"\u021d\3\2\2\2\u00b3\u021f\3\2\2\2\u00b5\u0222\3\2\2\2\u00b7\u0231\3\2"+
		"\2\2\u00b9\u0257\3\2\2\2\u00bb\u0259\3\2\2\2\u00bd\u0260\3\2\2\2\u00bf"+
		"\u0267\3\2\2\2\u00c1\u0276\3\2\2\2\u00c3\u00c4\t\2\2\2\u00c4\4\3\2\2\2"+
		"\u00c5\u00c6\t\3\2\2\u00c6\6\3\2\2\2\u00c7\u00c8\t\4\2\2\u00c8\b\3\2\2"+
		"\2\u00c9\u00ca\t\5\2\2\u00ca\n\3\2\2\2\u00cb\u00cc\t\6\2\2\u00cc\f\3\2"+
		"\2\2\u00cd\u00ce\t\7\2\2\u00ce\16\3\2\2\2\u00cf\u00d0\t\b\2\2\u00d0\20"+
		"\3\2\2\2\u00d1\u00d2\t\t\2\2\u00d2\22\3\2\2\2\u00d3\u00d4\t\n\2\2\u00d4"+
		"\24\3\2\2\2\u00d5\u00d6\t\13\2\2\u00d6\26\3\2\2\2\u00d7\u00d8\t\f\2\2"+
		"\u00d8\30\3\2\2\2\u00d9\u00da\t\r\2\2\u00da\32\3\2\2\2\u00db\u00dc\t\16"+
		"\2\2\u00dc\34\3\2\2\2\u00dd\u00de\t\17\2\2\u00de\36\3\2\2\2\u00df\u00e0"+
		"\t\20\2\2\u00e0 \3\2\2\2\u00e1\u00e2\t\21\2\2\u00e2\"\3\2\2\2\u00e3\u00e4"+
		"\t\22\2\2\u00e4$\3\2\2\2\u00e5\u00e6\t\23\2\2\u00e6&\3\2\2\2\u00e7\u00e8"+
		"\t\24\2\2\u00e8(\3\2\2\2\u00e9\u00ea\t\25\2\2\u00ea*\3\2\2\2\u00eb\u00ec"+
		"\t\26\2\2\u00ec,\3\2\2\2\u00ed\u00ee\t\27\2\2\u00ee.\3\2\2\2\u00ef\u00f0"+
		"\t\30\2\2\u00f0\60\3\2\2\2\u00f1\u00f2\t\31\2\2\u00f2\62\3\2\2\2\u00f3"+
		"\u00f4\t\32\2\2\u00f4\64\3\2\2\2\u00f5\u00f6\t\33\2\2\u00f6\66\3\2\2\2"+
		"\u00f7\u00f8\5\7\4\2\u00f8\u00f9\5%\23\2\u00f9\u00fa\5\13\6\2\u00fa\u00fb"+
		"\5\3\2\2\u00fb\u00fc\5)\25\2\u00fc\u00fd\5\13\6\2\u00fd8\3\2\2\2\u00fe"+
		"\u00ff\5\t\5\2\u00ff\u0100\5\3\2\2\u0100\u0101\5)\25\2\u0101\u0102\5\3"+
		"\2\2\u0102\u0103\5\5\3\2\u0103\u0104\5\3\2\2\u0104\u0105\5\'\24\2\u0105"+
		"\u0106\5\13\6\2\u0106:\3\2\2\2\u0107\u0108\5\t\5\2\u0108\u0109\5%\23\2"+
		"\u0109\u010a\5\37\20\2\u010a\u010b\5!\21\2\u010b<\3\2\2\2\u010c\u010d"+
		"\5\23\n\2\u010d\u010e\5\r\7\2\u010e>\3\2\2\2\u010f\u0110\5\13\6\2\u0110"+
		"\u0111\5\61\31\2\u0111\u0112\5\23\n\2\u0112\u0113\5\'\24\2\u0113\u0114"+
		"\5)\25\2\u0114\u0115\5\'\24\2\u0115@\3\2\2\2\u0116\u0117\5\'\24\2\u0117"+
		"\u0118\5\7\4\2\u0118\u0119\5\21\t\2\u0119\u011a\5\13\6\2\u011a\u011b\5"+
		"\33\16\2\u011b\u011c\5\3\2\2\u011cB\3\2\2\2\u011d\u011e\5\r\7\2\u011e"+
		"\u011f\5%\23\2\u011f\u0120\5\37\20\2\u0120\u0121\5\33\16\2\u0121D\3\2"+
		"\2\2\u0122\u0123\5/\30\2\u0123\u0124\5\21\t\2\u0124\u0125\5\13\6\2\u0125"+
		"\u0126\5%\23\2\u0126\u0127\5\13\6\2\u0127F\3\2\2\2\u0128\u0129\5\3\2\2"+
		"\u0129\u012a\5\'\24\2\u012a\u012b\5\7\4\2\u012bH\3\2\2\2\u012c\u012d\5"+
		"\t\5\2\u012d\u012e\5\13\6\2\u012e\u012f\5\'\24\2\u012f\u0130\5\7\4\2\u0130"+
		"J\3\2\2\2\u0131\u0132\5\23\n\2\u0132\u0133\5\35\17\2\u0133\u0134\5)\25"+
		"\2\u0134\u0135\5\37\20\2\u0135L\3\2\2\2\u0136\u0137\5\t\5\2\u0137\u0138"+
		"\5\13\6\2\u0138\u0139\5\r\7\2\u0139\u013a\5\3\2\2\u013a\u013b\5+\26\2"+
		"\u013b\u013c\5\31\r\2\u013c\u013d\5)\25\2\u013dN\3\2\2\2\u013e\u013f\5"+
		")\25\2\u013f\u0140\5\3\2\2\u0140\u0141\5\5\3\2\u0141\u0142\5\31\r\2\u0142"+
		"\u0143\5\13\6\2\u0143P\3\2\2\2\u0144\u0145\5!\21\2\u0145\u0146\5%\23\2"+
		"\u0146\u0147\5\23\n\2\u0147\u0148\5\33\16\2\u0148\u0149\5\3\2\2\u0149"+
		"\u014a\5%\23\2\u014a\u014b\5\63\32\2\u014bR\3\2\2\2\u014c\u014d\5\27\f"+
		"\2\u014d\u014e\5\13\6\2\u014e\u014f\5\63\32\2\u014fT\3\2\2\2\u0150\u0151"+
		"\5\37\20\2\u0151\u0152\5\35\17\2\u0152V\3\2\2\2\u0153\u0154\5+\26\2\u0154"+
		"\u0155\5\35\17\2\u0155\u0156\5\23\n\2\u0156\u0157\5#\22\2\u0157\u0158"+
		"\5+\26\2\u0158\u0159\5\13\6\2\u0159X\3\2\2\2\u015a\u015b\5\23\n\2\u015b"+
		"\u015c\5\35\17\2\u015c\u015d\5\t\5\2\u015d\u015e\5\13\6\2\u015e\u015f"+
		"\5\61\31\2\u015fZ\3\2\2\2\u0160\u0161\5\'\24\2\u0161\u0162\5\13\6\2\u0162"+
		"\u0163\5\31\r\2\u0163\u0164\5\13\6\2\u0164\u0165\5\7\4\2\u0165\u0166\5"+
		")\25\2\u0166\\\3\2\2\2\u0167\u0168\5\t\5\2\u0168\u0169\5\13\6\2\u0169"+
		"\u016a\5\31\r\2\u016a\u016b\5\13\6\2\u016b\u016c\5)\25\2\u016c\u016d\5"+
		"\13\6\2\u016d^\3\2\2\2\u016e\u016f\5\23\n\2\u016f\u0170\5\35\17\2\u0170"+
		"\u0171\5\'\24\2\u0171\u0172\5\13\6\2\u0172\u0173\5%\23\2\u0173\u0174\5"+
		")\25\2\u0174`\3\2\2\2\u0175\u0176\5+\26\2\u0176\u0177\5!\21\2\u0177\u0178"+
		"\5\t\5\2\u0178\u0179\5\3\2\2\u0179\u017a\5)\25\2\u017a\u017b\5\13\6\2"+
		"\u017bb\3\2\2\2\u017c\u017d\5\37\20\2\u017d\u017e\5%\23\2\u017e\u017f"+
		"\5\t\5\2\u017f\u0180\5\13\6\2\u0180\u0181\5%\23\2\u0181d\3\2\2\2\u0182"+
		"\u0183\5\5\3\2\u0183\u0184\5\63\32\2\u0184f\3\2\2\2\u0185\u0186\5\'\24"+
		"\2\u0186\u0187\5\13\6\2\u0187\u0188\5)\25\2\u0188h\3\2\2\2\u0189\u018a"+
		"\5-\27\2\u018a\u018b\5\3\2\2\u018b\u018c\5\31\r\2\u018c\u018d\5+\26\2"+
		"\u018d\u018e\5\13\6\2\u018ej\3\2\2\2\u018f\u0190\5-\27\2\u0190\u0191\5"+
		"\3\2\2\u0191\u0192\5\31\r\2\u0192\u0193\5+\26\2\u0193\u0194\5\13\6\2\u0194"+
		"\u0195\5\'\24\2\u0195l\3\2\2\2\u0196\u0197\5\35\17\2\u0197\u0198\5+\26"+
		"\2\u0198\u0199\5\31\r\2\u0199\u019a\5\31\r\2\u019an\3\2\2\2\u019b\u019c"+
		"\5\23\n\2\u019c\u019d\5\35\17\2\u019d\u019e\5)\25\2\u019ep\3\2\2\2\u019f"+
		"\u01a0\5\7\4\2\u01a0\u01a1\5\21\t\2\u01a1\u01a2\5\3\2\2\u01a2\u01a3\5"+
		"%\23\2\u01a3r\3\2\2\2\u01a4\u01a5\5\23\n\2\u01a5\u01a6\5\35\17\2\u01a6"+
		"\u01a7\5)\25\2\u01a7\u01a8\5\13\6\2\u01a8\u01a9\5\17\b\2\u01a9\u01aa\5"+
		"\13\6\2\u01aa\u01ab\5%\23\2\u01abt\3\2\2\2\u01ac\u01ad\5\r\7\2\u01ad\u01ae"+
		"\5\31\r\2\u01ae\u01af\5\37\20\2\u01af\u01b0\5\3\2\2\u01b0\u01b1\5)\25"+
		"\2\u01b1v\3\2\2\2\u01b2\u01b3\5\t\5\2\u01b3\u01b4\5\23\n\2\u01b4\u01b5"+
		"\5-\27\2\u01b5\u01b8\3\2\2\2\u01b6\u01b8\7\61\2\2\u01b7\u01b2\3\2\2\2"+
		"\u01b7\u01b6\3\2\2\2\u01b8x\3\2\2\2\u01b9\u01ba\5\33\16\2\u01ba\u01bb"+
		"\5\37\20\2\u01bb\u01bc\5\t\5\2\u01bc\u01bf\3\2\2\2\u01bd\u01bf\7\'\2\2"+
		"\u01be\u01b9\3\2\2\2\u01be\u01bd\3\2\2\2\u01bfz\3\2\2\2\u01c0\u01c1\5"+
		"\37\20\2\u01c1\u01c2\5%\23\2\u01c2\u01c6\3\2\2\2\u01c3\u01c4\7~\2\2\u01c4"+
		"\u01c6\7~\2\2\u01c5\u01c0\3\2\2\2\u01c5\u01c3\3\2\2\2\u01c6|\3\2\2\2\u01c7"+
		"\u01c8\5\3\2\2\u01c8\u01c9\5\35\17\2\u01c9\u01ca\5\t\5\2\u01ca\u01ce\3"+
		"\2\2\2\u01cb\u01cc\7(\2\2\u01cc\u01ce\7(\2\2\u01cd\u01c7\3\2\2\2\u01cd"+
		"\u01cb\3\2\2\2\u01ce~\3\2\2\2\u01cf\u01d0\5\35\17\2\u01d0\u01d1\5\37\20"+
		"\2\u01d1\u01d2\5)\25\2\u01d2\u01d5\3\2\2\2\u01d3\u01d5\7#\2\2\u01d4\u01cf"+
		"\3\2\2\2\u01d4\u01d3\3\2\2\2\u01d5\u0080\3\2\2\2\u01d6\u01d7\5\61\31\2"+
		"\u01d7\u01d8\5\37\20\2\u01d8\u01d9\5%\23\2\u01d9\u0082\3\2\2\2\u01da\u01db"+
		"\5+\26\2\u01db\u01dc\5\35\17\2\u01dc\u01dd\5\23\n\2\u01dd\u01de\5\37\20"+
		"\2\u01de\u01df\5\35\17\2\u01df\u0084\3\2\2\2\u01e0\u01e1\7?\2\2\u01e1"+
		"\u01e2\7@\2\2\u01e2\u0086\3\2\2\2\u01e3\u01e4\7?\2\2\u01e4\u01e9\7?\2"+
		"\2\u01e5\u01e6\7>\2\2\u01e6\u01e7\7?\2\2\u01e7\u01e9\7@\2\2\u01e8\u01e3"+
		"\3\2\2\2\u01e8\u01e5\3\2\2\2\u01e9\u0088\3\2\2\2\u01ea\u01eb\7>\2\2\u01eb"+
		"\u01f3\7@\2\2\u01ec\u01ed\7#\2\2\u01ed\u01f3\7?\2\2\u01ee\u01ef\7\u0080"+
		"\2\2\u01ef\u01f3\7?\2\2\u01f0\u01f1\7`\2\2\u01f1\u01f3\7?\2\2\u01f2\u01ea"+
		"\3\2\2\2\u01f2\u01ec\3\2\2\2\u01f2\u01ee\3\2\2\2\u01f2\u01f0\3\2\2\2\u01f3"+
		"\u008a\3\2\2\2\u01f4\u01f5\7>\2\2\u01f5\u01f6\7?\2\2\u01f6\u008c\3\2\2"+
		"\2\u01f7\u01f8\7>\2\2\u01f8\u008e\3\2\2\2\u01f9\u01fa\7@\2\2\u01fa\u01fb"+
		"\7?\2\2\u01fb\u0090\3\2\2\2\u01fc\u01fd\7@\2\2\u01fd\u0092\3\2\2\2\u01fe"+
		"\u01ff\7?\2\2\u01ff\u0094\3\2\2\2\u0200\u0201\7\60\2\2\u0201\u0202\7,"+
		"\2\2\u0202\u0096\3\2\2\2\u0203\u0204\7=\2\2\u0204\u0098\3\2\2\2\u0205"+
		"\u0206\7<\2\2\u0206\u009a\3\2\2\2\u0207\u0208\7\60\2\2\u0208\u009c\3\2"+
		"\2\2\u0209\u020a\7.\2\2\u020a\u009e\3\2\2\2\u020b\u020c\7,\2\2\u020c\u00a0"+
		"\3\2\2\2\u020d\u020e\7+\2\2\u020e\u00a2\3\2\2\2\u020f\u0210\7*\2\2\u0210"+
		"\u00a4\3\2\2\2\u0211\u0212\7_\2\2\u0212\u00a6\3\2\2\2\u0213\u0214\7]\2"+
		"\2\u0214\u00a8\3\2\2\2\u0215\u0216\7-\2\2\u0216\u00aa\3\2\2\2\u0217\u0218"+
		"\7/\2\2\u0218\u00ac\3\2\2\2\u0219\u021a\7\u0080\2\2\u021a\u00ae\3\2\2"+
		"\2\u021b\u021c\7~\2\2\u021c\u00b0\3\2\2\2\u021d\u021e\7(\2\2\u021e\u00b2"+
		"\3\2\2\2\u021f\u0220\7`\2\2\u0220\u00b4\3\2\2\2\u0221\u0223\4\62;\2\u0222"+
		"\u0221\3\2\2\2\u0223\u0224\3\2\2\2\u0224\u0222\3\2\2\2\u0224\u0225\3\2"+
		"\2\2\u0225\u00b6\3\2\2\2\u0226\u0227\5\u00b5[\2\u0227\u0228\5\u009bN\2"+
		"\u0228\u0229\5\u00b5[\2\u0229\u0232\3\2\2\2\u022a\u022b\5\u00b5[\2\u022b"+
		"\u022c\5\u009bN\2\u022c\u0232\3\2\2\2\u022d\u022e\5\u009bN\2\u022e\u022f"+
		"\5\u00b5[\2\u022f\u0232\3\2\2\2\u0230\u0232\5\u00b5[\2\u0231\u0226\3\2"+
		"\2\2\u0231\u022a\3\2\2\2\u0231\u022d\3\2\2\2\u0231\u0230\3\2\2\2\u0232"+
		"\u0239\3\2\2\2\u0233\u0236\t\6\2\2\u0234\u0237\5\u00a9U\2\u0235\u0237"+
		"\5\u00abV\2\u0236\u0234\3\2\2\2\u0236\u0235\3\2\2\2\u0236\u0237\3\2\2"+
		"\2\u0237\u0238\3\2\2\2\u0238\u023a\5\u00b5[\2\u0239\u0233\3\2\2\2\u0239"+
		"\u023a\3\2\2\2\u023a\u00b8\3\2\2\2\u023b\u0245\7)\2\2\u023c\u023d\7^\2"+
		"\2\u023d\u0244\7^\2\2\u023e\u023f\7)\2\2\u023f\u0244\7)\2\2\u0240\u0241"+
		"\7^\2\2\u0241\u0244\7)\2\2\u0242\u0244\n\34\2\2\u0243\u023c\3\2\2\2\u0243"+
		"\u023e\3\2\2\2\u0243\u0240\3\2\2\2\u0243\u0242\3\2\2\2\u0244\u0247\3\2"+
		"\2\2\u0245\u0243\3\2\2\2\u0245\u0246\3\2\2\2\u0246\u0248\3\2\2\2\u0247"+
		"\u0245\3\2\2\2\u0248\u0258\7)\2\2\u0249\u0253\7$\2\2\u024a\u024b\7^\2"+
		"\2\u024b\u0252\7^\2\2\u024c\u024d\7$\2\2\u024d\u0252\7$\2\2\u024e\u024f"+
		"\7^\2\2\u024f\u0252\7$\2\2\u0250\u0252\n\35\2\2\u0251\u024a\3\2\2\2\u0251"+
		"\u024c\3\2\2\2\u0251\u024e\3\2\2\2\u0251\u0250\3\2\2\2\u0252\u0255\3\2"+
		"\2\2\u0253\u0251\3\2\2\2\u0253\u0254\3\2\2\2\u0254\u0256\3\2\2\2\u0255"+
		"\u0253\3\2\2\2\u0256\u0258\7$\2\2\u0257\u023b\3\2\2\2\u0257\u0249\3\2"+
		"\2\2\u0258\u00ba\3\2\2\2\u0259\u025d\t\36\2\2\u025a\u025c\t\37\2\2\u025b"+
		"\u025a\3\2\2\2\u025c\u025f\3\2\2\2\u025d\u025b\3\2\2\2\u025d\u025e\3\2"+
		"\2\2\u025e\u00bc\3\2\2\2\u025f\u025d\3\2\2\2\u0260\u0261\t \2\2\u0261"+
		"\u0262\3\2\2\2\u0262\u0263\b_\2\2\u0263\u00be\3\2\2\2\u0264\u0265\7/\2"+
		"\2\u0265\u0268\7/\2\2\u0266\u0268\7%\2\2\u0267\u0264\3\2\2\2\u0267\u0266"+
		"\3\2\2\2\u0268\u026c\3\2\2\2\u0269\u026b\n!\2\2\u026a\u0269\3\2\2\2\u026b"+
		"\u026e\3\2\2\2\u026c\u026a\3\2\2\2\u026c\u026d\3\2\2\2\u026d\u0270\3\2"+
		"\2\2\u026e\u026c\3\2\2\2\u026f\u0271\7\17\2\2\u0270\u026f\3\2\2\2\u0270"+
		"\u0271\3\2\2\2\u0271\u0272\3\2\2\2\u0272\u0273\7\f\2\2\u0273\u0274\3\2"+
		"\2\2\u0274\u0275\b`\2\2\u0275\u00c0\3\2\2\2\u0276\u0277\7\61\2\2\u0277"+
		"\u0278\7,\2\2\u0278\u027c\3\2\2\2\u0279\u027b\13\2\2\2\u027a\u0279\3\2"+
		"\2\2\u027b\u027e\3\2\2\2\u027c\u027d\3\2\2\2\u027c\u027a\3\2\2\2\u027d"+
		"\u027f\3\2\2\2\u027e\u027c\3\2\2\2\u027f\u0280\7,\2\2\u0280\u0281\7\61"+
		"\2\2\u0281\u0282\3\2\2\2\u0282\u0283\ba\2\2\u0283\u00c2\3\2\2\2\30\2\u01b7"+
		"\u01be\u01c5\u01cd\u01d4\u01e8\u01f2\u0224\u0231\u0236\u0239\u0243\u0245"+
		"\u0251\u0253\u0257\u025d\u0267\u026c\u0270\u027c\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}